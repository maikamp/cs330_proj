buildscript {
    repositories {
        jcenter()
        ivy {
        	url "https://secweb.cs.odu.edu/~zeil/ivyrepo"
    	}
    }
    dependencies {
        //classpath 'org.ysb33r.gradle:doxygen:0.2'
        
        classpath "org.hidetake:gradle-ssh-plugin:2.5.0+"
        classpath "edu.odu.cs.zeil:report_accumulator:1.2+"
	}
}

// Add report task imports
import edu.odu.cs.zeil.report_accumulator.ReportStats
import edu.odu.cs.zeil.report_accumulator.ReportsDeploy



apply plugin: 'java'
apply plugin: 'eclipse'

//apply plugin: 'org.ysb33r.doxygen'

apply plugin: "org.hidetake.ssh"

apply plugin: 'jacoco'
//apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    implementation "junit:junit:4.12"
    implementation "org.hamcrest:hamcrest-library:1.3"
    compile 'commons-cli:commons-cli:1.4'
    implementation 'org.apache.commons:commons-lang3:3.6'
    compile 'org.apache.logging.log4j:log4j-api:2.9.1'
    compile 'org.apache.logging.log4j:log4j-core:2.9.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation 'com.github.javaparser:javaparser-core-serialization:3.15.3'
}

jar {
    baseName = 'Mutation'
}

test {
    reports {
        html.enabled = true
    }           
    ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    
    jacoco {
    	append = false
    }
}

javadoc {
	failOnError false
}

/*
doxygen {
    generate_html true

    template 'ProgramMutator/src/documentation.config'

    source new File(projectDir,'ProgramMutator/src/main/java')
    source new File(projectDir,'ProgramMutator/src/test/java')
    outputDir new File(buildDir,'docs')
}
*/
/*
findbugsMain {
	ignoreFailures true
	reports {
		xml.enabled false
		html.enabled true
		
	}
}
*/
pmd {
	ignoreFailures = true
	ruleSets = [
		"java-basic",
		"java-braces",
		//"java-clone",
		"java-codesize",
		//"java-comments",
		//"java-controversial",
		//"java-coupling",
		//"java-design",
		"java-empty",
		//"java-finalizers",
		"java-imports",
		//"java-junit",
		"java-naming",
		//"java-optimizations",
		"java-strictexception",
		"java-strings",
		"java-sunsecure",
		"java-typeresolution",
		"java-unnecessary",
		"java-unusedcode"
	]
}

jacoco {
	toolVersion = "0.8.0"
}
		
jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled true
	}		
}	

// Check Style Config
checkstyle {
	toolVersion = "8.27"
	configFile file("config/checkstyle/checkstyle.xml")
	ignoreFailures = true
	showViolations = false
}
checkstyleMain {
    source ='ProgramMutator/src/main/java'
}
checkstyleTest {
    source ='ProgramMutator/src/test/java'
}
tasks.withType(Checkstyle) {
	reports {
		html.destination project.file("build/reports/checkstyle/main.html")
	}
}
checkstyleTest.enabled = false
// End Checkstyle config

//statistics collection and reporting tasks
task collectStats (type: ReportStats, dependsOn: "build") {
	reportsURL = "http://www.cs.odu.edu/~mcampbel/cs350/Mutation/reports"
}

task report (type: ReportsDeploy, dependsOn: "collectStats") {
	deployDestination = "/home/mcampbel/public_html/cs350/Mutation/reports"
}
//end statistics collection and reporting tasks
